/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package service;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import util.JdbcUtil;

/**
 *
 * @author chensi
 */
public class DropCourseFrame extends javax.swing.JFrame {

    /**
     * Creates new form DropCourseFrame
     */
    public DropCourseFrame() {
        initComponents();
        setLocationRelativeTo(null);

        Font font = new Font("Calibri", Font.BOLD, 13);

        studentNameLabel.setFont(font);
        studentNameLabel.setForeground(Color.red);
        studentNameLabel.setText("");
        courseNameLabel.setFont(font);
        courseNameLabel.setForeground(Color.red);
        courseNameLabel.setText("");

        Connection conn = null;
        PreparedStatement ps = null;
        ResultSet res = null;
        String sqlQueStu = "select distinct SSN as SSN from attend";

        try {
            conn = JdbcUtil.getConn();

            ps = conn.prepareStatement(sqlQueStu);
            res = ps.executeQuery();

            while (res.next()) {
                studentSSNJComboBox.addItem(res.getString("SSN"));
            }

        } catch (SQLException e) {
            // TODO Auto-generated catch block
            JOptionPane.showMessageDialog(getParent(),
                    "exception occurs when querying: \r\n error message: " + e.getMessage(),
                    "error message", 0);
        } finally {
            JdbcUtil.close(res, ps, conn);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        studentSSNJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        studentNameLabel = new javax.swing.JLabel();
        courseNameLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        courseCodeJComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        registerYearJComboBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        sememsterJComboBox = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Drop a course");

        jLabel1.setFont(new java.awt.Font("微软雅黑", 1, 18)); // NOI18N
        jLabel1.setText("Drop  a  course");

        jLabel2.setText("Student SSN：");

        studentSSNJComboBox.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        studentSSNJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---select student SSN---" }));
        studentSSNJComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                studentSSNJComboBoxItemStateChanged(evt);
            }
        });
        studentSSNJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentSSNJComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("Student Name：");

        studentNameLabel.setText("jLabel4");

        courseNameLabel.setText("jLabel6");

        jLabel6.setText("Course Name：");

        courseCodeJComboBox.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        courseCodeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---select courseID---" }));
        courseCodeJComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                courseCodeJComboBoxItemStateChanged(evt);
            }
        });

        jLabel7.setText("Course Code：");

        registerYearJComboBox.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        registerYearJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---select Year---" }));
        registerYearJComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                registerYearJComboBoxItemStateChanged(evt);
            }
        });
        registerYearJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerYearJComboBoxActionPerformed(evt);
            }
        });

        jLabel8.setText("Register Year：");

        sememsterJComboBox.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        sememsterJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---select Semester---" }));

        jLabel9.setText("Semester：");

        deleteButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        deleteButton.setText("Drop");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        backButton.setText("Cancel");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(30, 30, 30)
                        .addComponent(courseNameLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(studentNameLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(studentSSNJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(courseCodeJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(registerYearJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sememsterJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(backButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jLabel1)))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(studentSSNJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(studentNameLabel))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(courseCodeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(courseNameLabel))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(registerYearJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(sememsterJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(backButton))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        // 删除 按钮
        String SSN = studentSSNJComboBox.getSelectedItem().toString();
        String cid = courseCodeJComboBox.getSelectedItem().toString();
        String year = registerYearJComboBox.getSelectedItem().toString();
        String semester = sememsterJComboBox.getSelectedItem().toString();

        String sname = studentNameLabel.getText();
        String cname = courseNameLabel.getText();

        if ("---select student SSN---".equals(SSN)) {
            JOptionPane.showMessageDialog(getParent(), "please select SSN first",
                    "warning message", 2);
        } else {

            if ("---select courseID---".equals(cid)) {
                JOptionPane.showMessageDialog(getParent(), "please select courseID first",
                        "warning message", 2);
            } else {

                if ("---select Year---".equals(year)) {
                    JOptionPane.showMessageDialog(getParent(), "please select registration year first",
                            "warning message", 2);
                } else {

                    if ("---select Semester---".equals(semester)) {
                        JOptionPane.showMessageDialog(getParent(), "please select registration semester first",
                                "warning message", 2);
                    } else {

                        if (JOptionPane.showConfirmDialog(getParent(),
                                "sure to delete course \r\n{\r\nName：" + sname + "\r\nCourse："
                                + cname + "\r\nYear：" + year
                                + "\r\nSemester：" + semester + "\r\n} ???",
                                "Check", JOptionPane.YES_NO_OPTION, 3) == JOptionPane.YES_OPTION) {


                            studentSSNJComboBox.removeAllItems();
                            studentSSNJComboBox.addItem("---select student SSN---");

                            Connection conn = null;
                            PreparedStatement ps = null;
                            ResultSet res = null;
                            String sqlDelAtt = "delete from attend where SSN = ? and cid = ? and year = ? and semester = ?";
                            String sqlQueAtt = "select distinct SSN as SSN from attend";

                            try {
                                conn = JdbcUtil.getConn();
                                conn.setAutoCommit(false);

                                ps = conn.prepareStatement(sqlDelAtt);
                                ps.setInt(1, Integer.parseInt(SSN));
                                ps.setInt(2, Integer.parseInt(cid));
                                ps.setString(3, year);
                                ps.setString(4, semester);
                                ps.executeUpdate();

                                ps = conn.prepareStatement(sqlQueAtt);
                                res = ps.executeQuery();
                                while (res.next()) {
                                    studentSSNJComboBox.addItem(res.getString("SSN"));
                                }

                                conn.commit();
                                JOptionPane.showMessageDialog(getParent(),
                                        "course has been dropped successfully",
                                        "successful", 1);


                            } catch (SQLException e) {
                                // TODO Auto-generated catch block
                                JOptionPane.showMessageDialog(getParent(),
                                        "exception occurs: \r\n error message: "
                                        + e.getMessage(),
                                        "error message", 0);
                                try {
                                    conn.rollback();
                                } catch (SQLException e1) {
                                    // TODO Auto-generated catch block
                                    e1.printStackTrace();
                                }
                            } finally {
                                JdbcUtil.close(null, ps, conn);
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        // 返回 按钮
        this.dispose();
        new MainFrame().setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void studentSSNJComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_studentSSNJComboBoxItemStateChanged
        // TODO add your handling code here:
        // studentSSNJComboBox change事件

        if (evt.getStateChange() == ItemEvent.SELECTED) {

            String SSN = studentSSNJComboBox.getSelectedItem().toString();

            courseCodeJComboBox.removeAllItems();
            courseCodeJComboBox.addItem("---select courseID---");

            if ("---select student SSN---".equals(SSN)) {
                studentNameLabel.setText("");
            } else {
                Connection conn = null;
                PreparedStatement psQueStu = null;
                PreparedStatement psQueAtt = null;
                ResultSet res = null;
                String sqlQueStu = "select sname as SN from student where SSN = ?";
                String sqlQueAtt = "select distinct cid as CID from attend where SSN = ?";

                try {
                    conn = JdbcUtil.getConn();

                    psQueStu = conn.prepareStatement(sqlQueStu);
                    psQueAtt = conn.prepareStatement(sqlQueAtt);

                    psQueStu.setInt(1, Integer.parseInt(SSN));
                    psQueAtt.setInt(1, Integer.parseInt(SSN));

                    res = psQueStu.executeQuery();

                    res.next();
                    studentNameLabel.setText(res.getString("SN"));

                    res = psQueAtt.executeQuery();
                    while (res.next()) {
                        courseCodeJComboBox.addItem(res.getString("CID"));
                    }

                } catch (SQLException e) {
                    // TODO Auto-generated catch block
                    JOptionPane.showMessageDialog(
                            getParent(),
                            "exception occurs when querying: \r\n error message: "
                            + e.getMessage(), "error message",
                            0);
                } finally {
                    JdbcUtil.close(res, psQueStu, conn);
                    JdbcUtil.close(res, psQueAtt, conn);
                }
            }
        }
    }//GEN-LAST:event_studentSSNJComboBoxItemStateChanged

    private void courseCodeJComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_courseCodeJComboBoxItemStateChanged
        // TODO add your handling code here:
        // courseCodeJComboBox change事件
        String SSN = studentSSNJComboBox.getSelectedItem().toString();

        if (evt.getStateChange() == ItemEvent.SELECTED) {

            registerYearJComboBox.removeAllItems();
            registerYearJComboBox.addItem("---select Year---");

            String cid = courseCodeJComboBox.getSelectedItem().toString();

            if ("---select courseID---".equals(cid)) {
                courseNameLabel.setText("");
            } else {

                Connection conn = null;
                PreparedStatement psQueCou = null;
                PreparedStatement psQueAtt = null;
                ResultSet res = null;
                String sqlQueCou = "select cname as CN from course where cid = ?";
                String sqlQueAtt = "select distinct year as YEAR from attend where SSN = ? and cid = ?";

                try {
                    conn = JdbcUtil.getConn();

                    psQueCou = conn.prepareStatement(sqlQueCou);
                    psQueAtt = conn.prepareStatement(sqlQueAtt);

                    psQueCou.setInt(1, Integer.parseInt(cid));
                    psQueAtt.setInt(1, Integer.parseInt(SSN));
                    psQueAtt.setInt(2, Integer.parseInt(cid));

                    res = psQueCou.executeQuery();

                    res.next();
                    courseNameLabel.setText(res.getString("CN"));

                    res = psQueAtt.executeQuery();
                    while (res.next()) {
                        registerYearJComboBox.addItem(res.getString("YEAR"));
                    }

                } catch (SQLException e) {
                    // TODO Auto-generated catch block
                    JOptionPane.showMessageDialog(
                            getParent(),
                            "exception occurs when querying: \r\n error message: "
                            + e.getMessage(), "error message",
                            0);
                } finally {
                    JdbcUtil.close(res, psQueCou, conn);
                    JdbcUtil.close(res, psQueAtt, conn);
                }
            }
        }
    }//GEN-LAST:event_courseCodeJComboBoxItemStateChanged

    private void registerYearJComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_registerYearJComboBoxItemStateChanged
        // TODO add your handling code here:
        // registerYearJComboBox change事件
        String SSN = studentSSNJComboBox.getSelectedItem().toString();
        String cid = courseCodeJComboBox.getSelectedItem().toString();

        if (evt.getStateChange() == ItemEvent.SELECTED) {

            sememsterJComboBox.removeAllItems();
            sememsterJComboBox.addItem("---select Semester---");

            String year = registerYearJComboBox.getSelectedItem().toString();

            if (!"---select Year---".equals(year)) {

                Connection conn = null;
                PreparedStatement ps = null;
                ResultSet res = null;
                String sql = "select semester as SM from attend where SSN = ? and cid = ? and year = ?";

                try {
                    conn = JdbcUtil.getConn();

                    ps = conn.prepareStatement(sql);

                    ps.setInt(1, Integer.parseInt(SSN));
                    ps.setInt(2, Integer.parseInt(cid));
                    ps.setString(3, year);

                    res = ps.executeQuery();
                    while (res.next()) {
                        sememsterJComboBox.addItem(res.getString("SM"));
                    }

                } catch (SQLException e) {
                    // TODO Auto-generated catch block
                    JOptionPane.showMessageDialog(
                            getParent(),
                            "exception occurs when querying: \r\n error message: "
                            + e.getMessage(), "error message",
                            0);
                } finally {
                    JdbcUtil.close(res, ps, conn);
                }
            }
        }
    }//GEN-LAST:event_registerYearJComboBoxItemStateChanged

    private void studentSSNJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentSSNJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentSSNJComboBoxActionPerformed

    private void registerYearJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerYearJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registerYearJComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DropCourseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DropCourseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DropCourseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DropCourseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new DropCourseFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox courseCodeJComboBox;
    private javax.swing.JLabel courseNameLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox registerYearJComboBox;
    private javax.swing.JComboBox sememsterJComboBox;
    private javax.swing.JLabel studentNameLabel;
    private javax.swing.JComboBox studentSSNJComboBox;
    // End of variables declaration//GEN-END:variables
}
